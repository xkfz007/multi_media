#!/bin/bash
#set -o

#check system
sys=$(uname -o)
if [[ $sys =~ "Cygwin" ]];then
    echo "sys="$sys
    sys_name="cygwin"
elif [[ $sys =~ "Linux" ]];then
    echo "sys="$sys
    sys_name="linux"
fi

#check configuration
CONF="RELEASE"
if [ $# -ge 1 ];then
    CONF=$(echo $1|tr '[a-z]' '[A-Z]')
fi

CONF_LIST=("RELEASE" "DEBUG")

FOUND=0
for i in ${CONF_LIST[@]}
do
    if [ "$i" == "$CONF" ];then
        FOUND=1
        break
    fi
done

if [ $FOUND -eq 0 ];then
    CONF="RELEASE"
fi

#check directories
CURRENT_DIR=`pwd`

#SOURCE_DIR=`realpath "${CURRENT_DIR}/../"`
ROOT_DIR=`cd "${CURRENT_DIR}/../";pwd`
SOURCE_DIR="$ROOT_DIR/source"
EXTERNAL_LIBS_DIR="$ROOT_DIR/external_libs"

LIB_DIR="${CURRENT_DIR}/${sys_name}/lib"
INC_DIR="${CURRENT_DIR}/${sys_name}/include"
PKG_DIR="${LIB_DIR}/pkgconfig"
export PKG_CONFIG_PATH="$PKG_GONFIG_PATH:${PKG_DIR}"
PKG_PREFIX="${CURRENT_DIR}/${sys_name}"

function get_tar_cmd
{
    local f=$1
    local ext=${f##*.}
    local cmd=''
    if [ "$ext" = "bz2" ];then
        cmd='-jx'
    elif [ "$ext" = "gz" ];then
        cmd='-zx'
    elif [ "$ext" = "xz" ];then
        cmd='-Jx'
    fi
    echo $cmd
}

function compile_lib
{
    local FILE=$1
    local BCMD=$2
    echo $BCMD
    local BDIR=${FILE%.tar.*}
    if [ -e $BDIR ];then
        rm -r $BDIR
    fi
    local cmd=$(get_tar_cmd $FILE)
    echo $cmd
    mkdir "$BDIR"
    cd "$CURRENT_DIR/$BDIR" && \
        cat "$EXTERNAL_LIBS_DIR/$FILE" |tar $cmd --strip-components=1 && \
        eval $BCMD && \
        make && \
        make install && \
        make clean
    if [ -d "include" ];then
        cp -rvf include/*  "$INC_DIR"
    fi
    if [ -d "lib" ];then
        cp -rvf lib/* "$LIB_DIR"
    fi

    cd "$CURRENT_DIR"
}


BUILDS_DIR="${CURRENT_DIR}/$CONF"
if [ ! -e $BUILDS_DIR ];then
    mkdir $BUILDS_DIR
fi

cd ${BUILDS_DIR}

#compile external libs
DO_COMPILING=0
if [ $DO_COMPILING -eq 1 ];then
    #x264
    X264_FILE="x264-snapshot-20160829-2245-stable.tar.bz2"
    X264_CMD='./configure --prefix="`pwd`" --disable-cli --enable-static'
    #X264_PC='x264.pc'
    compile_lib "$X264_FILE" "$X264_CMD" #"$X264_PC"
    
    #x265
    X265_FILE="x265_2.0.tar.gz"
    X265_CMD='cmake -G "Unix Makefiles" -DCMAKE_INSTALL_PREFIX="`pwd`" -DENABLE_STATIC:bool=on -DENABLE_SHARED:bool=off -DENABLE_CLI:bool=off "`pwd`/source"'
    #X265_PC='x265.pc'
    compile_lib "$X265_FILE" "$X265_CMD" #"$X265_PC"

    #vpx
    VPX_FILE="libvpx-1.6.0.tar.bz2"
    VPX_CMD='./configure --prefix="`pwd`" --enable-vp8 --enable-vp9  --disable-shared --enable-static --disable-examples --disable-docs'
    #VPX_PC='vpx.pc'
    compile_lib "$VPX_FILE" "$VPX_CMD" #"$VPX_PC"

    #fdk-aac
    FDKAAC_FILE="fdk-aac-0.1.4.tar.gz"
    FDKAAC_CMD='./autogen.sh && ./configure --prefix="`pwd`" --disable-shared '
    #FDKAAC_PC='fdk-aac.pc'
    compile_lib "$FDKAAC_FILE" "$FDKAAC_CMD" #"$FDKAAC_PC"
    
    #xvid
    XVID_FILE="xvidcore-1.3.4.tar.gz"
    XVID_CMD='cd build/generic && ./configure --prefix="`pwd`" --bindir="`pwd`/bin" --datadir="`pwd`" '
    compile_lib "$XVID_FILE" "$XVID_CMD"

    ##freetype
    #FREETYPE_FILE="freetype-2.5.5.tar.xz"
    #FREETYPE_CMD=''

    ##fontconfig
    #FONTCONFIG_FILE="freetype-2.5.5.tar.xz"
    #FONTCONFIG_CMD=''

fi


function replace_line
{
   f=$1
   lineno=$2
   content=$3
   sed -i "${lineno}s/.*/${content}/g" $f
}
function replace_line2
{
   f=$1
   pat=$2
   content=$3
   sed -i "/${pat}/s/.*/${content}/g" $f
}
function change_pc
{
    f=$1
    path=$2
    echo "path1"=$path
    path2=${path//\//\\\/}
    echo "path2"=$path2
    line_content="prefix=$path2"
    #replace_line "$f" 1 "$line_content"
    replace_line "$f" "^prefix=" "$line_content"
}

#change the pkg file
pcfile_list=(x264.pc x265.pc vpx.pc fdk-aac.pc)
for i in $pcfile_list
do
    change_pc "$PKG_DIR/$i" "$PKG_PREFIX"
done

cmd="${SOURCE_DIR}/configure  \
    --prefix=${BUILDS_DIR} \
    --pkg-config-flags=\"--static\" \
    --extra-ldflags=\"-L${LIB_DIR}\" \
    --extra-cflags=\"-I${INC_DIR}\" \
    --disable-doc       \
    --disable-htmlpages \
    --disable-manpages  \
    --disable-podpages  \
    --disable-txtpages  \
    --disable-ffplay    \
    --disable-ffserver  \
    --disable-shared    \
    --enable-gpl        \
    --enable-nonfree    \
    --enable-static     \
    --enable-libx264    \
    --enable-libx265    \
    --enable-libfdk_aac \
    --enable-libvpx     \
    --enable-libxvid    \
    --enable-libfontconfig \
    --enable-libfreetype   \
    --disable-d3d11va                 \
    --disable-dxva2                   \
    --disable-vaapi                   \
    --disable-vda                     \
    --disable-vdpau                   \
    --disable-videotoolbox            \
    --disable-bzlib                   \
    --disable-iconv                   \
    --disable-libxcb                  \
    --disable-libxcb-shm              \
    --disable-libxcb-xfixes           \
    --disable-libxcb-shape            \
    --disable-lzma                    \
    --disable-sdl2                    \
    --disable-xlib                    \
    --disable-zlib                    \
    --disable-schannel                \
    --disable-securetransport         \
    --disable-outdevs                 \
    --disable-indevs                  \
    --enable-indev=lavfi              \
"
if [ "$CONF" = "DEBUG"  ];then
    cmd="$cmd \
        --disable-optimizations \
        --disable-stripping     \
        --disable-asm           \
        --disable-pthreads      \
        "
fi
echo $cmd
eval $cmd

config_file="config.h"
if [ ! -e $config_file  ];then
    echo "ERROR: ${config_file} does not exist"
    exit
fi

# modify the config.h for cygwin
function replace_macro
{
    def=$1
    f=$2
    sed -i "s/.*$def.*/#define $def 0/g" $f
}

#sed -i "s/.*HAVE_ARC4RANDOM.*/#define HAVE_ARC4RANDOM 0/g" config.h

if [ "$sys_name" = "cygwin" ];then
    replace_macro "HAVE_ARC4RANDOM"     "$config_file"
    replace_macro "HAVE_GETTIMEOFDAY"   "$config_file"
    replace_macro "HAVE_GLOB"           "$config_file"
    replace_macro "CONFIG_DOC"          "$config_file"
    replace_macro "HAVE_TERMIOS_H"      "$config_file"
fi


#add defines.h to config.h
line='#include \"../defines.h\"'
cnt=$(grep -n "$line" $config_file|wc -l)
#echo $cnt
#cmd1="grep -n \"$line\" $config_file|wc -l"
#echo $cmd1
#eval $cmd1
if [ $cnt -eq 0 ];then
    #echo "defines.h will be included by config.h"
    sed -i '$i'"$line" $config_file 
elif [ $cnt -eq 1 ];then
    echo "defines.h has already been included by config.h"
else
    echo "WARNING:Too many including of defines.h in config.h, please check"
fi

make
make install
cd -
