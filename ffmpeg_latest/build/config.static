#!/bin/bash
#set -o

#check system
sys=$(uname -o)
if [[ $sys =~ "Cygwin" ]];then
    echo "sys="$sys
    sys_name="cygwin"
elif [[ $sys =~ "Linux" ]];then
    echo "sys="$sys
    sys_name="linux"
fi

#check configuration
CONF="RELEASE"
if [ $# -ge 1 ];then
    CONF=$(echo $1|tr '[a-z]' '[A-Z]')
fi

CONF_LIST=("RELEASE" "DEBUG")

FOUND=0
for i in ${CONF_LIST[@]}
do
    if [ "$i" == "$CONF" ];then
        FOUND=1
        break
    fi
done

if [ $FOUND -eq 0 ];then
    CONF="RELEASE"
fi

#check directories
CURRENT_DIR=`pwd`
BUILDS_DIR="${CURRENT_DIR}/$CONF"
if [ ! -e $BUILDS_DIR ];then
    mkdir $BUILDS_DIR
fi

#SOURCE_DIR=`realpath "${CURRENT_DIR}/../"`
ROOT_DIR=`cd "${CURRENT_DIR}/../";pwd`
SOURCE_DIR="$ROOT_DIR/source"
EXTERNAL_LIBS_DIR="$ROOT_DIR/external_libs"

LIB_DIR="${CURRENT_DIR}/${sys_name}/lib"
INC_DIR="${CURRENT_DIR}/${sys_name}/include"
PKG_DIR="${LIB_DIR}/pkgconfig"
export PKG_CONFIG_PATH="$PKG_GONFIG_PATH:${PKG_DIR}"

#compile external libs
DO_COMPILING=1
if [ $DO_COMPILING -eq 1 ];then
    #x264
    X264_VERSION="20160829-2245-stable"
    X264_BUILD_DIR="x264-$X264_VERSION"
    if [ -e $X264_BUILD_DIR ];then
        rm -r $X264_BUILD_DIR
        mkdir $X264_BUILD_DIR
    fi
    cd $X264_BUILD_DIR
    cat "$EXTERNAL_LIBS_DIR/x264-snapshot-${X264_VERSION}.tar.bz2" |tar -jx --strip-components=1
    ./configure --prefix=`pwd` --disable-cli --enable-static
    make
    make install
    make distclean
    if [ -d "include" ];then
        cp -rvf include  "$INC_DIR"
    fi
    if [ -d "lib" ];then
        cp -rvf lib "$LIB_DIR"
    fi
    cd -

    ##x265
    #X265_VERSION="2.0"
    #X265_BUILD_DIR="x265_$X265_VERSION"
    #if [ -e $X265_BUILD_DIR ];then
    #    rm -r $X265_BUILD_DIR
    #    mkdir $X265_BUILD_DIR
    #fi
    #cd $X265_BUILD_DIR
    #cat "$EXTERNAL_LIBS_DIR/x265_${X265_VERSION}.tar.gz" |tar -zx
    #cd  x265_${X265_VERSION}/build/linux 
    #cmake -G "Unix Makefiles" -DCMAKE_INSTALL_PREFIX=`pwd` -DENABLE_STATIC:bool=on -DENABLE_SHARED:bool=off -DENABLE_CLI:bool=off ../../source
    #make
    #make install
    #make distclean
    #if [ -d "include" ];then
    #    cp -rvf include  "$INC_DIR"
    #fi
    #if [ -d "lib" ];then
    #    cp -rvf lib "$LIB_DIR"
    #fi
    #cd -


fi


function replace_line
{
   f=$1
   lineno=$2
   content=$3
   sed -i "${lineno}s/.*/${content}/g" $f
}
function change_pc
{
    f=$1
    path=$2
    echo "path1"=$path
    path2=${path//\//\\\/}
    echo "path2"=$path2
    line_content="prefix=$path2"
    replace_line "$f" 1 "$line_content"
}

PKG_PREFIX="${CURRENT_DIR}/${sys_name}"
pcfile_list=(x264.pc x265.pc)
for i in $pcfile_list
do
    fullpath="$PKG_DIR/$i"
    change_pc "$fullpath" "$PKG_PREFIX"
done


cd ${BUILDS_DIR}
cmd="${SOURCE_DIR}/configure  \
    --prefix=$BUILDS_DIR \
    --pkg-config-flags=\"--static\" \
    --disable-doc       \
    --disable-htmlpages \
    --disable-manpages  \
    --disable-podpages  \
    --disable-txtpages  \
    --disable-ffplay    \
    --disable-ffserver  \
    --disable-shared    \
    --enable-gpl        \
    --enable-nonfree    \
    --enable-static     \
    --enable-libx264    \
    --enable-libx265    \
    --disable-d3d11va                 \
    --disable-dxva2                   \
    --disable-vaapi                   \
    --disable-vda                     \
    --disable-vdpau                   \
    --disable-videotoolbox            \
    --disable-bzlib                   \
    --disable-iconv                   \
    --disable-libxcb                  \
    --disable-libxcb-shm              \
    --disable-libxcb-xfixes           \
    --disable-libxcb-shape            \
    --disable-lzma                    \
    --disable-sdl2                    \
    --disable-xlib                    \
    --disable-zlib                    \
    --disable-schannel                \
    --disable-securetransport         \
    --disable-outdevs                 \
    --disable-indevs                  \
    --enable-indev=lavfi              \
    --extra-ldflags=\"-L${LIB_DIR}\" \
    --extra-cflags=\"-I${INC_DIR}\" \
"
    #--enable-libfdk_aac \
if [ "$CONF" = "DEBUG"  ];then
    cmd="$cmd \
        --disable-optimizations \
        --disable-stripping     \
        --disable-asm           \
        --disable-pthreads      \
        "
fi
echo $cmd
#eval $cmd
#
#config_file="config.h"
#if [ ! -e $config_file  ];then
#    echo "ERROR: ${config_file} does not exist"
#    exit
#fi
#
## modify the config.h for cygwin
#function replace_macro
#{
#    def=$1
#    f=$2
#    sed -i "s/.*$def.*/#define $def 0/g" $f
#}
#
##sed -i "s/.*HAVE_ARC4RANDOM.*/#define HAVE_ARC4RANDOM 0/g" config.h
#
#if [ "$sys_name" = "cygwin" ];then
#    replace_macro "HAVE_ARC4RANDOM"     "$config_file"
#    replace_macro "HAVE_GETTIMEOFDAY"   "$config_file"
#    replace_macro "HAVE_GLOB"           "$config_file"
#    replace_macro "CONFIG_DOC"          "$config_file"
#    replace_macro "HAVE_TERMIOS_H"      "$config_file"
#fi
#
#
##add defines.h to config.h
#line='#include \"../defines.h\"'
#cnt=$(grep -n "$line" $config_file|wc -l)
##echo $cnt
##cmd1="grep -n \"$line\" $config_file|wc -l"
##echo $cmd1
##eval $cmd1
#if [ $cnt -eq 0 ];then
#    #echo "defines.h will be included by config.h"
#    sed -i '$i'"$line" $config_file 
#elif [ $cnt -eq 1 ];then
#    echo "defines.h has already been included by config.h"
#else
#    echo "WARNING:Too many including of defines.h in config.h, please check"
#fi
#cd -
